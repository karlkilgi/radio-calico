name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: Run All Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Run all tests with coverage
        run: make test-coverage

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/backend/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Start server for integration tests
        run: |
          make dev &
          sleep 5
          curl -f http://localhost:3001 || exit 1

      - name: Validate Docker configurations
        run: make validate

      - name: Check service health
        run: make info

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Run comprehensive security scan
        run: make security

      - name: Generate security report
        run: make security-report
        continue-on-error: true

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (for make commands)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production images
        run: make prod-build

      - name: Run Docker security scan
        run: make security-docker
        continue-on-error: true

      - name: Check for SARIF files
        run: |
          echo "Checking for SARIF files..."
          if [ -f trivy-backend-results.sarif ]; then
            echo "✓ Backend SARIF file exists"
            ls -la trivy-backend-results.sarif
          else
            echo "⚠ Backend SARIF file not found"
          fi
          if [ -f trivy-nginx-results.sarif ]; then
            echo "✓ Nginx SARIF file exists"
            ls -la trivy-nginx-results.sarif
          else
            echo "⚠ Nginx SARIF file not found"
          fi

      - name: Upload Trivy backend scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: hashFiles('trivy-backend-results.sarif') != ''
        with:
          sarif_file: 'trivy-backend-results.sarif'
        continue-on-error: true

      - name: Upload Trivy nginx scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: hashFiles('trivy-nginx-results.sarif') != ''
        with:
          sarif_file: 'trivy-nginx-results.sarif'
        continue-on-error: true