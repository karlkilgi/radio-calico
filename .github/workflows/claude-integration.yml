# GitHub Actions workflow for Claude API integration
# This provides an alternative to a full GitHub App using Actions

name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            **/*.js
            **/*.ts
            **/*.py
            **/*.java
            **/*.go
            **/*.rs
            **/*.cpp
            **/*.c
            **/*.h

      - name: Claude Code Review
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');

            for (const file of changedFiles) {
              if (!file) continue;

              try {
                // Get file content
                const { data: fileContent } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: file,
                  ref: context.payload.pull_request.head.sha
                });

                const content = Buffer.from(fileContent.content, 'base64').toString();

                // This is a placeholder for Claude API integration
                // You would need to implement actual Claude API calls here
                // using the CLAUDE_API_KEY environment variable

                const reviewComment = `ðŸ¤– **Claude Code Review for \`${file}\`**

                This file has been analyzed by Claude. Here are some observations:

                - Code structure looks good
                - Consider adding more comments for complex logic
                - Ensure proper error handling is in place

                *This is an automated review by Claude. Please review manually as well.*`;

                // Post review comment
                await github.rest.pulls.createReviewComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  body: reviewComment,
                  commit_id: context.payload.pull_request.head.sha,
                  path: file,
                  line: 1
                });

              } catch (error) {
                console.log(`Could not review file ${file}:`, error.message);
              }
            }

  claude-respond:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')

    steps:
      - name: Claude Response
        uses: actions/github-script@v7
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        with:
          script: |
            const comment = context.payload.comment.body;
            const question = comment.replace('@claude', '').trim();

            // Placeholder for Claude API integration
            const response = `ðŸ¤– **Claude Response**

            You asked: "${question}"

            I'm here to help! This is a placeholder response. To enable full Claude integration, you'll need to:

            1. Add your Claude API key to repository secrets as \`CLAUDE_API_KEY\`
            2. Implement the actual Claude API calls in this workflow
            3. Configure the appropriate permissions and rate limiting

            *This is an automated response. Full Claude integration requires additional setup.*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: response
            });